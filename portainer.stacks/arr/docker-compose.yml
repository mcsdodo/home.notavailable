services:
  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    volumes:
      - /root/sabnzbd:/config
      - /mnt/media/downloads/sabnzbd:/downloads #optional
    ports:
      - 5003:8080
    restart: unless-stopped
    labels:
      kuma.__docker: ""
      
     
  mylar3:
    image: lscr.io/linuxserver/mylar3:latest
    environment:
      - PUID=0
      - PGID=0
      - TZ=Europe/Bratislava
    volumes:
      - /root/mylar3:/config
      - /mnt/media/comics:/comics
      - /mnt/downloads/comics:/downloads
      - /mnt/downloads/sabnzbd:/sabnzbddownloads
    ports:
      - 5001:8090
    restart: unless-stopped
    labels:
      kuma.__docker: ""
    
  # pyload-ng:
  #   image: lscr.io/linuxserver/pyload-ng:latest
  #   environment:
  #     - PUID=0
  #     - PGID=0
  #     - TZ=Europe/Bratislava
  #   volumes:
  #     - /root/pyload-ng/config:/config
  #     - /mnt/media/downloads:/downloads
  #   ports:
  #     - 8000:8000
  #   restart: unless-stopped
  #   labels:
  #     kuma.__docker: ""

  sonarr:
    image: 'linuxserver/sonarr:latest'
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /root/sonarr:/config # config Folder
      - /mnt/media/tvshows:/tvshows #data Folder  
      - /mnt/media/downloads:/downloads # download folder
    ports:
      - 8989:8989
    labels:
      kuma.__docker: ""
      
  radarr:
    image: 'linuxserver/radarr:latest'
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /root/radarr:/config # config files
      - /mnt/media/movies:/movies # movies folder
      - /mnt/media/downloads:/downloads # download folder
    ports:
      - 7878:7878      
    labels:
      kuma.__docker: ""
      
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /root/prowlarr:/config
    restart: unless-stopped
    network_mode: 'service:gluetun' #comment/remove if you are not using the VPN
    depends_on:                     #comment/remove if you are not using the VPN
      - gluetun                     #comment/remove if you are not using the VPN
    labels:
      kuma.__docker: ""
      
  bazarr:
    image: 'linuxserver/bazarr:latest'
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /root/bazarr:/config
      - /mnt/media/movies:/movies
      - /mnt/media/tvshows:/tvshows
    ports:
      - '6767:6767'
    labels:
      kuma.__docker: ""
      
  deluge:
    image: lscr.io/linuxserver/deluge:latest
    environment:
      - PUID=0
      - PGID=0
      - TZ=Europe/Bratislava
      - DELUGE_LOGLEVEL=error #optional
    volumes:
      - /root/deluge/config:/config
      - /mnt/media/downloads:/downloads
      - /mnt/media/movies:/movies
      - /mnt/media/tvshows:/tvshows

    restart: unless-stopped
    labels:
      kuma.__docker: ""
    network_mode: 'service:gluetun' #comment/remove if you are not using the VPN
    depends_on:                     #comment/remove if you are not using the VPN
      - gluetun                     #comment/remove if you are not using the VPN

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=0
      - PGID=0
      - TZ=Europe/Bratislava
      - WEBUI_PORT=8085
    volumes:
      - /root/qbittorrent:/config
      - /mnt/media/downloads:/downloads
      - /mnt/media/movies:/movies
      - /mnt/media/tvshows:/tvshows
    restart: unless-stopped
    labels:
      kuma.__docker: ""
    network_mode: 'service:gluetun' #comment/remove if you are not using the VPN
    depends_on:                     #comment/remove if you are not using the VPN
      - gluetun                     #comment/remove if you are not using the VPN
      
  gluetun:
    image: qmcgaw/gluetun:latest
    restart: always
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - "8888:8888/tcp"                         # Gluetun Local Network HTTP proxy
      - "8388:8388/tcp"                         # Gluetun Local Network Shadowsocks
      - "8388:8388/udp"                         # Gluetun Local Network Shadowsocks
      - 8112:8112   # WebUI Portal: deluge
      - 8085:8085   # WebUI qBittorrent
      - "6881:6881/tcp"        # Transmission Torrent Port TCP
      - "6881:6881/udp"        # Transmission Torrent Port UDP
      - 9696:9696 #Prowlarr UI
    networks:
      default:
        aliases: # aliases so we can access deluge & prowlarr from within other containers by name
          - deluge
          - prowlarr
          - qbittorrent
    volumes:
      - /root/gluetun:/gluetun
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - TZ=${TZ:?err}
      - VPN_SERVICE_PROVIDER=${VPN_SERVICE_PROVIDER:?err}
      - VPN_TYPE=${VPN_TYPE:?err}
      - SERVER_REGIONS=${SERVER_REGIONS:?err}
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
      # this will use docker DNS for containers running within gluetun (container IN gluetun network will be able to access others outside). \
      # It also potentionally leaks all DNS queries to ISP! Possible workaround: https://github.com/qdm12/gluetun/issues/281 - didn't work for me.
      - DNS_KEEP_NAMESERVER=on 
    labels:
      kuma.__docker: ""
      
  overseerr:
    image: sctx/overseerr:latest
    environment:
      - LOG_LEVEL=debug
      - TZ=${TZ}
    ports:
      - 5055:5055
    volumes:
      - /root/overseerr/config:/app/config
    restart: unless-stopped
    labels:
      kuma.__docker: ""    

      